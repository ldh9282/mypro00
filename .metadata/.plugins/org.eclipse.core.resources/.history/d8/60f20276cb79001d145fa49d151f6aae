<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <!-- DAO 대신 매퍼인터페이스를 사용하는 경우, 
      namespace 속성에 패키지이름이 포함된 인터페이스이름을 설정합니다-->
<mapper namespace="com.spring.mypro00.mapper.MyBoardMapper">


<!-- 게시물 조회 - 목록 --><!--
 	<select id="selectMyBoardList" resultType="com.spring.mypro00.domain.MyBoardVO">
		SELECT * FROM book_ex.tbl_myboard ORDER BY bno DESC
	</select>
	
-->
<!-- 게시물 조회 - 페이징 고려 --><!-- 
 	<select id="selectMyBoardList" resultType="com.spring.mypro00.domain.MyBoardVO">
		<![CDATA[
			SELECT bno, btitle, bwriter, bregDate, bmodDate, bviewCnt, bdelFlag 
			FROM ( SELECT /*+ index_desc(a PK_MYBOARD) */ rownum rn, bno, btitle, bwriter, bregDate, bmodDate, bviewCnt, bdelFlag 
				   FROM tbl_myboard a
			       WHERE rownum <= ( #{pageNum} * #{rowAmountPerPage} )
			      ) 
			WHERE rn >= ( #{pageNum} * #{rowAmountPerPage} ) - ( #{rowAmountPerPage} -1 )		
		]]>
	</select> -->

<!-- 게시물 조회 - 검색-페이징 고려 -->
 	<select id="selectMyBoardList" resultType="com.spring.mypro00.domain.MyBoardVO">
		<![CDATA[
			SELECT bno, btitle, bwriter, bregDate, bmodDate, bviewCnt, bdelFlag, breplyCnt 
			FROM ( SELECT /*+ index_desc(a PK_MYBOARD) */ rownum rn, bno, btitle, bwriter, bregDate, bmodDate, bviewCnt, bdelFlag, breplyCnt 
				   FROM tbl_myboard a
			       WHERE
		]]>

		<trim  prefix="("  suffix=") AND" prefixOverrides="OR" >
			<foreach collection="scopeArray" item="scope">
				<trim prefix="OR">
					<choose>
						<when test="scope=='T'.toString()">btitle LIKE '%' || #{keyword} || '%'</when>
						<when test="scope=='C'.toString()">bcontent LIKE '%' || #{keyword} || '%'</when>
						<when test="scope=='W'.toString()">bwriter LIKE '%' || #{keyword} || '%'</when>
					</choose>
				</trim>
			</foreach>
		</trim>		
		<![CDATA[			             
			       	  rownum <= ( #{pageNum} * #{rowAmountPerPage} )
			      ) 
			WHERE rn >= ( #{pageNum} * #{rowAmountPerPage} ) - ( #{rowAmountPerPage} -1 )		
		]]>
	</select>
	

<!-- 게시물 총 개수 조회(페이징): 삭제 요청된 행 포함 --><!-- 
	<select id="selectRowAmountTotal" resultType="long">
		SELECT count(*) totalCnt FROM book_ex.tbl_myBoard	
	</select> -->

<!-- 게시물 총 개수 조회(검색 - 페이징): 삭제 요청된 행 포함 -->
	<select id="selectRowAmountTotal" resultType="long">
		SELECT count(*) totalCnt FROM book_ex.tbl_myBoard	
		<where> 
			<trim  prefix="("  suffix=")" prefixOverrides="OR" >
				<foreach collection="scopeArray" item="scope">
					<trim prefix="OR">
						<choose>
							<when test="scope=='T'.toString()">btitle LIKE '%' || #{keyword} || '%'</when>
							<when test="scope=='C'.toString()">bcontent LIKE '%' || #{keyword} || '%'</when>
							<when test="scope=='W'.toString()">bwriter LIKE '%' || #{keyword} || '%'</when>
						</choose>
					</trim>
				</foreach>
			</trim>
		</where>	
	</select>
	
	

<!-- 게시물 등록1 - selectKey 이용 않함 --><!-- 
	<insert id="insertMyBoard" parameterType="com.spring.mypro00.domain.MyBoardVO">
		INSERT INTO book_ex.tbl_myboard
		VALUES (book_ex.seq_myboard.nextval, #{btitle}, #{bcontent}, #{bwriter},
        		DEFAULT,DEFAULT,DEFAULT,DEFAULT,DEFAULT)
	</insert> -->


<!-- 게시물 등록2 - selectKey 이용함 -->

	<insert id="insertMyBoardSelectKey" parameterType="com.spring.mypro00.domain.MyBoardVO">
		<selectKey keyProperty="bno" order="BEFORE" resultType="long">
			SELECT book_ex.seq_myboard.nextval FROM dual
		</selectKey>

		INSERT INTO book_ex.tbl_myboard
		VALUES (#{bno}, #{btitle}, #{bcontent}, #{bwriter},
        		DEFAULT,DEFAULT,DEFAULT,DEFAULT,DEFAULT)
	</insert>

<!-- 특정 게시물 조회 -->	
	<select id="selectMyBoard" resultType="com.spring.mypro00.domain.MyBoardVO">
		    SELECT * FROM book_ex.tbl_myboard WHERE bno = #{bno} 
	</select>

<!-- 특정 게시물 수정 -->
	<update id="updateMyBoard">
		UPDATE book_ex.tbl_myboard
		SET btitle = #{btitle}, bcontent = #{bcontent}, bmodDate = DEFAULT
		WHERE bno = #{bno}
	</update>
	
<!-- 특정 게시물 삭제 -->
	<delete id="deleteMyBoard">
		DELETE FROM book_ex.tbl_myboard WHERE bno = #{bno}	
	</delete>
	
	
<!-- 특정 게시물 삭제 요청 - 해당 글의 bdelFlag을 1로 수정 -->
	<update id="updateBdelFlag">
		UPDATE book_ex.tbl_myboard SET bdelflag = 1 WHERE bno = #{bno}	
	</update>

<!-- 특정 게시물 조회 수 증가 -->	
	<update id="updateBviewsCnt">
		UPDATE book_ex.tbl_myboard SET bviewcnt = (bviewcnt + 1) WHERE bno = #{bno} 
	</update>

<!-- 게시물의 댓글 개수 수정: 댓글추가 시에 #{amount}에 1, 댓글삭제 시 #{amount}에 -1 이 각각 전달됨 -->
	<update id="updateBReplyCnt">
		UPDATE book_ex.tbl_myboard
		SET BREPLYCNT = BREPLYCNT + #{amount}
		WHERE bno = #{bno} AND bdelFlag = 0
	</update>
	
	<update id="updateBreplyCntCascade">
	
		UPDATE book_ex.tbl_myboard
		SET BREPLYCNT = BREPLYCNT - (
			SELECT count(*)
			FROM book_ex.tbl_myreply a
			WHERE CONNECT_BY_ROOT rno = #{rno} AND bno = #{bno}
			START WITH prno is null
			CONNECT BY (PRIOR rno = prno)
		)
		WHERE bno = a.bno AND bdelFlag = 0 
	
	</update>



<!-- 
	

	
    //게시물 삭제(관리자) – 사용자 삭제 요청된 게시물(bdelFlag = 1) 전체 삭제
    public int deleteAllBoardSetDeleted();

    //특정 게시물 조회수 증가
    public void updateBviewsCnt(long bno);



 -->


</mapper>